openapi: 3.0.3
info:
  title: RSVPlaner
  description: RSVPlaner
  version: 0.0.1
paths:
  /v1/event/:
    post:
      tags:
        - event
      summary: Create Event
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEvent'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - event
      summary: Find Events
      operationId: findEvents
      parameters:
        - name: page_number
          in: query
          required: true
          description: |- 
            The page number to return. Starts at 0. A page contains the number of elements specified
            by the 'page_size' parameter. To retrieve the next page in correct order, increment the 
            page number by 1 and do not change the 'page_size' parameter.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
        - name: event_type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/EventType'
        - name: title
          in: query
          required: false
          description: Returns all events that contain the given title as a substring
          schema:
              type: string
        - name: organizer_email
          in: query
          required: false
          schema:
            type: string
        - name: attendee_email
          in: query
          description: |- 
            Returns all events that contain the attendee with the provided emails. Cannot be 
            combined with other non required parameters.
          required: false
          schema:
            type: string
        - name: start_time
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        404:
          description: no events found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/event/{event_id}:
    get:
      tags:
        - event
      summary: Get Event
      operationId: getEvent
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - event
      summary: Add event attendee
      operationId: addEventAttendee
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attendee'
      responses:
        200:
          description: No content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - event
      summary: Upload event image
      operationId: uploadEventImage
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        204:
          description: No content
          content: { }
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/event/{event_id}/image:
    get:
      tags:
        - event
      summary: Get Event Image
      operationId: getEventImage
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            image/png:
              schema:
                type: string
                format: binary
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/event/{event_id}/{attendee_email}:
    put:
      tags:
        - event
      summary: Update attendee availability
      operationId: updateAttendeeAvailability
      description: |- 
        Updates the attendee availability for the given event. The attendee must be an attendee of 
        the event. The provided availabilities override any existing ones.
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: string
        - name: attendee_email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AttendeeAvailability'
      responses:
        200:
          description: No content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        default:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
    Event:
      type: object
      properties:
        event_id:
          type: string
        title:
          type: string
        description:
          type: string
        location:
          type: string
        location_description:
          description: A more detailed description of the location
          type: string
        event_type:
          $ref: '#/components/schemas/EventType'
        organizer:
          $ref: '#/components/schemas/Organizer'
        attendees:
          type: array
          description: Only set if the event type is private
          items:
            $ref: '#/components/schemas/Attendee'
        attendees_count:
          type: integer
        date_times:
          type: array
          items:
            type: object
            properties:
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
    EventType:
      type: string
      enum:
        - PRIVATE
        - PUBLIC
    Attendee:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        attendee_availabilities:
          type: array
          items:
            $ref: '#/components/schemas/AttendeeAvailability'
    AttendeeAvailability:
      type: object
      properties:
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ACCEPTED
            - DECLINED
            - UNDECIDED
    NewEvent:
      type: object
      required:
        - title
        - description
        - possible_date_times
        - location
        - event_type
        - organizer
      properties:
        title:
          type: string
        description:
          type: string
        possible_date_times:
          type: array
          items:
            type: object
            properties:
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
        location:
          type: string
        location_description:
          description: A more detailed description of the location
          type: string
        event_type:
          $ref: '#/components/schemas/EventType'
        organizer:
          $ref: '#/components/schemas/Organizer'
        invited_people:
          type: array
          items:
            $ref: '#/components/schemas/InvitedPerson'
    InvitedPerson:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    Organizer:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
